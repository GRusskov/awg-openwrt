name: Create Release on Tag

on:
  push:
    tags:
      - "v*.*.*"
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string

jobs:
  generate-config:
    runs-on: ubuntu-latest
    outputs:
      job-config: ${{ steps.generate-config.outputs.job-config }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'

      - name: Get OpenWRT version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_call" ]; then
            echo "VERSION=${{ inputs.tag_name }}" >> $GITHUB_ENV
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm install

  build:
    name: "v23.05.4 - aarch64_generic :: rockchip/armv8 build"
    runs-on: ubuntu-latest
    needs: generate-config
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v23.05.4
          fetch-depth: 0

      - name: Building kernel and tools
        run: |
          echo "pkgarch: aarch64_generic, target:rockchip, subtarget: armv8"

          # Setup & install feeds
          wget https://downloads.openwrt.org/releases/23.05.4/targets/rockchip/armv8/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/GRusskov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          # Setup config with AWG and dependencies
          wget https://downloads.openwrt.org/releases/23.05.4/targets/rockchip/armv8/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig

          echo "    > make tools/install"
          make tools/install -i -j `nproc`

          #echo "0919bf77bd78281b8293e21504faecfb" > ./build_dir/target-*/linux-*/linux-*/.vermagic
          cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true

          echo "    > make toolchain/install"
          make toolchain/install  -i -j `nproc`

          echo "0919bf77bd78281b8293e21504faecfb" > ./build_dir/target-*/linux-*/linux-*/.vermagic
          cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true

          # compile kernel module
          echo "    > make target/linux/compile"
          make target/linux/compile  -i -j `nproc` V=s

      - name: Build AmneziaWG
        run: |
          echo "0919bf77bd78281b8293e21504faecfb" > ./build_dir/target-*/linux-*/linux-*/.vermagic

          # Ignore kmod build for some targets, replace with the awg-go
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true

          make package/luci-app-amneziawg/{clean,download,prepare}
          make package/luci-app-amneziawg/compile V=s

          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile

      - name: Prepare artifacts
        run: |
          tag_name=${{  github.ref_name }}
          mkdir -p awgrelease
          postfix="v23.05.4_aarch64_generic_rockchip_armv8"
          cp bin/packages/aarch64_generic/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/aarch64_generic/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/rockchip/armv8/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
